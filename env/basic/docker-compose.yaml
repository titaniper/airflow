version: "3.7"

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow

  redis:
    image: redis:latest
    networks:
      - airflow

  airflow-init:
    image: apache/airflow:2.3.3
    entrypoint: /bin/bash
    command: >
      -c "
      airflow db init &&
      if ! airflow users list | grep -q 'admin'; then
        airflow users create --role Admin --username admin --password admin --email admin@example.com --firstname Admin --lastname User;
      else
        echo 'Admin user already exists, skipping user creation.';
      fi
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: u6xZHdC3KHn1ZP_yNH3Qe1_Rq6tClB4nsVPOoPAfGhs=
      AIRFLOW__WEBSERVER__SECRET_KEY: Y2lPvwZ3RGJbPYzv7OXq8A
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    networks:
      - airflow
    depends_on:
      - postgres
      - redis

  airflow-webserver:
    image: apache/airflow:2.3.3
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: u6xZHdC3KHn1ZP_yNH3Qe1_Rq6tClB4nsVPOoPAfGhs=
      AIRFLOW__WEBSERVER__SECRET_KEY: Y2lPvwZ3RGJbPYzv7OXq8A
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - airflow
    depends_on:
      - postgres
      - redis
      - airflow-init

  airflow-scheduler:
    image: apache/airflow:2.3.3
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: u6xZHdC3KHn1ZP_yNH3Qe1_Rq6tClB4nsVPOoPAfGhs=
      AIRFLOW__WEBSERVER__SECRET_KEY: Y2lPvwZ3RGJbPYzv7OXq8A
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - airflow
    depends_on:
      - postgres
      - redis
      - airflow-init

  airflow-worker:
    image: apache/airflow:2.3.3
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: u6xZHdC3KHn1ZP_yNH3Qe1_Rq6tClB4nsVPOoPAfGhs=
      AIRFLOW__WEBSERVER__SECRET_KEY: Y2lPvwZ3RGJbPYzv7OXq8A
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - airflow
    depends_on:
      - postgres
      - redis
      - airflow-init

volumes:
  postgres_data:

networks:
  airflow:
    driver: bridge
